version: '3.9'

services:
  web:
    image: projectweb:latest
    container_name: projectweb
    env_file:
      - .env
    build: .
    command: ["/bin/bash", "-c", "/project_1/wait_for_db.sh && gunicorn project.wsgi:application --bind 0.0.0.0:3000"]
    volumes:
      - .:/project_1
      - static_volume:/project_1/staticfiles
      - media_volume:/project_1/media
    expose:
      - "3000"
    restart: always         # Tambahkan ini
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: projectwebnginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/project_1/staticfiles
      - media_volume:/project_1/media
    ports:
      - "3000:3000"
    restart: always         # Tambahkan ini
    depends_on:
      - web
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  adminer:
    image: adminer:latest
    container_name: projectwebadminer
    restart: always
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  db:
    image: postgres:latest
    container_name: projectwebpostgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    restart: always         # Tambahkan ini
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /home/serverbkad/database:/database
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  static_volume:
  media_volume:
  postgres_data:
