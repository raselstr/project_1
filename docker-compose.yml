services:
  web:
    image: projectweb:latest
    env_file:
      - .env
    build: .
    container_name: projectweb
    command: gunicorn project.wsgi:application --bind 0.0.0.0:4500
    volumes:
      - .:/project_1
      - static_volume:/project_1/staticfiles
      - media_volume:/project_1/media
    expose:
      - "4500"
    networks:
      app-network:
        ipv4_address: 172.16.238.10
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4500"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:latest
    container_name: projectwebnginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/project_1/staticfiles
      - media_volume:/project_1/media
    ports:
      - "4500:4500"
    networks:
      app-network:
        ipv4_address: 172.16.238.11
    depends_on:
      - web  
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4500"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  adminer:
    image: adminer:latest
    container_name: projectwebadminer
    restart: always
    ports:
      - "8080:8080" 
    networks:
      app-network:
        ipv4_address: 172.16.238.12
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:latest
    container_name: projectwebpostgres
    environment:
      POSTGRES_DB: tkdd
      POSTGRES_USER: raselstr
      POSTGRES_PASSWORD: r283l8tr
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /d/web/db_host:/var/lib/postgresql/db_host
    networks:
      app-network:
        ipv4_address: 172.16.238.13
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "raselstr"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.238.0/24

volumes:
  static_volume:
  media_volume:
  postgres_data:
